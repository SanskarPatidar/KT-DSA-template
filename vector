
VECTOR-->

type --> MutableList<>
to create --> mutableListOf<>()

to get size -->
vec.size

to create of size n -->
val dp = MutableList(n) { 0 }

to add remove -->

/*
val vec = mutableListOf(10, 20, 30, 40)
or
var vec = mutableListOf()
or
var vec : MutableList<Int>
init {
  	vec = mutableListOf()//empty vector
}
or
var vec : MutableList<MutableList<Int>>                   	<-- 2DMATRIX
init {
  	vec = mutableListOf()
}
*/

vec.add(10)  // push equivalent
vec.add(20)
println(vec) // [10, 20]

val lastElement = vec.removeLast() // pop as well as get


to initialize all value with indices -->
val dp = MutableList<Int>(n) {it}


to reverse -->
vec.reverse()

to check empty -->
vec.isEmpty()

to check for last value -->
val lastValue = list.last()  // Access the last value










